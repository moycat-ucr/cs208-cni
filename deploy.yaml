apiVersion: v1
kind: Namespace
metadata:
  name: cs208-cni
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cs208-cni
  namespace: cs208-cni
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: "Reconcile"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cs208-cni
rules:
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "watch", "list" ]
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    resourceNames: [ "kubeadm-config" ]
    verbs: [ "get" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cs208-cni
subjects:
  - kind: ServiceAccount
    name: cs208-cni
    namespace: cs208-cni
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: cs208-cni
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cs208-cni
  namespace: cs208-cni
  labels:
    app: cs208-cni
spec:
  selector:
    matchLabels:
      app: cs208-cni
  template:
    metadata:
      labels:
        app: cs208-cni
    spec:
      volumes:
        - name: cni-config
          hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
      containers:
        - name: cs208-cni
          image: moycat/cs208-cni:latest
          securityContext:
            privileged: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: cni-config
              mountPath: /etc/cni/net.d
      hostNetwork: true
      dnsPolicy: ClusterFirst
      priorityClassName: system-node-critical
      serviceAccountName: cs208-cni
      restartPolicy: Always
      tolerations:
        - operator: Exists
